@model PlantInventory.Models.MoveModels.MoveCreate

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>MoveCreate</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <h6>What Product would you like to move?</h6>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BatchDetails.HerbId, ViewBag.HerbName as IEnumerable<SelectListItem>, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BatchDetails.HerbId, "", new { @class = "text-danger" })
        </div>

    
        <h6>Received on which day?</h6>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BatchDetails.HerbId, ViewBag.DateReceived as IEnumerable<SelectListItem>, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BatchDetails.HerbId, "", new { @class = "text-danger" })
        </div>
    
    
    
    </div>



    <div class="form-group" hidden>
        @Html.LabelFor(model => model.BatchId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BatchId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BatchId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumberOfPotsMoved, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumberOfPotsMoved, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumberOfPotsMoved, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MoveFrom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.MoveFrom, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MoveFrom, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MoveTo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.MoveTo, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MoveTo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
